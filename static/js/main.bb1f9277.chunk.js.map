{"version":3,"sources":["contexts/pokedexContext.js","resources/type_logos/grass.webp","resources/type_logos/bug.webp","resources/type_logos/dragon.webp","resources/type_logos/electric.webp","resources/type_logos/fairy.webp","resources/type_logos/flying.webp","utills/typesList.js","resources/type_logos/fire.webp","resources/type_logos/ghost.webp","resources/type_logos/ground.webp","resources/type_logos/ice.webp","resources/type_logos/normal.webp","resources/type_logos/poison.webp","resources/type_logos/psychic.webp","resources/type_logos/rock.webp","resources/type_logos/water.webp","components/ProgressBar.js","components/PokedexEntry.js","components/MyModal.js","components/PokedexListEntry.js","components/TypesModal.js","components/PokemonFilter.js","components/Contact.js","resources/loading-arrow.gif","components/Loading.js","components/PokedexPagination.js","pages/PokeDex.js","pages/Error.js","App.js","index.js"],"names":["types","grass","bug","dragon","electric","fairy","flying","ProgressBar","width","stat","fillerStyles","height","maxWidth","backgroundColor","borderRadius","style","marginTop","textTransform","display","position","paddingLeft","padding","color","fontWeight","PokedexEntry","pokemon","className","name","src","sprites","front_default","alt","order","map","type","i","filter","item","toString","split","slice","join","stats","base_stat","Math","random","MyModal","onRequestClose","effect","Effect","Fall","overlay","content","border","onClick","ModalManager","close","href","target","PokedexListEntry","open","AppContext","React","createContext","numbers","push","AppProvider","children","useState","loading","setLoading","setPokemon","searchTerm","setSearchTerm","sortedPokemon","setSortedPokemon","selectTerm","setSelectTerm","checked","typesState","setTypesState","fetchPokemon","useCallback","a","fetch","response","json","data","newPokemon","abilities","moves","other","prevState","length","console","log","useEffect","Provider","value","filterPokemon","tempPokes","includes","toLowerCase","sort","b","localeCompare","typesArray","forEach","Object","values","temp","poke","temp2","x","temp3","concat","Set","usePokedexContext","useContext","TypesModal","M","AutoInit","index","defaultChecked","ischecked","onChange","state","handleChange","PokemonFilter","setCurrentPage","onSubmit","e","preventDefault","action","id","placeholder","defaultValue","disabled","textAlign","Contact","date","Date","icon","faCodeBranch","faHashtag","faEnvelope","getFullYear","Loading","arrow","PokedexPagination","pokemonPerPage","totalPokemon","paginate","active","pageNumbers","ceil","page","PokeDex","currentPage","lastIndex","firstIndex","currentPokemon","pageNumber","Error","to","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb1f9277.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = ' https://pokeapi.co/api/v2/pokemon/'\nconst AppContext = React.createContext()\nconst numbers = []\nfor (let i = 1; i < 152; i++) {\n  numbers.push(i.toString())\n}\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false)\n  const [pokemon, setPokemon] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [sortedPokemon, setSortedPokemon] = useState([])\n  const [selectTerm, setSelectTerm] = useState('pokedex')\n  const [typesState, setTypesState] = useState([\n    { type: 'grass', checked: true },\n    { type: 'bug', checked: true },\n    { type: 'dragon', checked: true },\n    { type: 'electric', checked: true },\n    { type: 'fairy', checked: true },\n    { type: 'fire', checked: true },\n    { type: 'flying', checked: true },\n    { type: 'ghost', checked: true },\n    { type: 'ground', checked: true },\n    { type: 'ice', checked: true },\n    { type: 'normal', checked: true },\n    { type: 'poision', checked: true },\n    { type: 'psychic', checked: true },\n    { type: 'rock', checked: true },\n    { type: 'water', checked: true }\n  ])\n\n  const fetchPokemon = useCallback(async () => {\n    setLoading(true)\n    try {\n      for (let i = 0; i < numbers.length; i++) {\n        const response = await fetch(`${url}${numbers[i]}`)\n        const data = await response.json()\n        const newPokemon = () => {\n          const {\n            name,\n            order,\n            height,\n            abilities,\n            moves,\n            sprites,\n            other,\n            stats,\n            types\n          } = data\n          return {\n            name,\n            order,\n            height,\n            abilities,\n            moves,\n            sprites,\n            other,\n            stats,\n            types\n          }\n        }\n        setPokemon((prevState) => [...prevState, newPokemon()])\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n    setLoading(false)\n  }, [])\n\n  const filterPokemon = () => {\n    let tempPokes = [...pokemon]\n    //sort by search name\n    if (searchTerm !== '') {\n      tempPokes = pokemon.filter((item) =>\n        item.name.includes(searchTerm.toLowerCase())\n      )\n    }\n    // sort by stats\n    if (selectTerm === 'alphabetical') {\n      tempPokes = tempPokes.sort((a, b) => a.name.localeCompare(b.name))\n    }\n\n    if (selectTerm === 'hp') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[0].base_stat < b.stats[0].base_stat ? 1 : -1))\n    }\n\n    if (selectTerm === 'attack') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[1].base_stat < b.stats[1].base_stat ? 1 : -1))\n    }\n\n    if (selectTerm === 'defense') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[2].base_stat < b.stats[2].base_stat ? 1 : -1))\n    }\n\n    if (selectTerm === 'sp-attack') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[3].base_stat < b.stats[3].base_stat ? 1 : -1))\n    }\n\n    if (selectTerm === 'sp-defense') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[4].base_stat < b.stats[4].base_stat ? 1 : -1))\n    }\n\n    if (selectTerm === 'speed') {\n      tempPokes = tempPokes\n        .slice()\n        .sort((a, b) => (a.stats[5].base_stat < b.stats[5].base_stat ? 1 : -1))\n    }\n\n    //Sort by type\n    let typesArray = []\n    typesState.forEach((item) => {\n      if (item.checked) typesArray.push(Object.values(item)[0])\n    })\n\n    const temp = tempPokes.slice(0).filter((poke) => {\n      return typesArray.includes(poke.types[0].type.name)\n    })\n\n    const temp2 = tempPokes.slice(0).filter((poke) => {\n      let x\n      if (poke.types[1]) {\n        x = typesArray.includes(poke.types[1].type.name)\n      }\n      return x\n    })\n\n    const temp3 = temp.concat(temp2)\n\n    tempPokes = [...new Set(temp3)]\n\n    setSortedPokemon(tempPokes)\n  }\n\n  useEffect(() => {\n    fetchPokemon()\n  }, [fetchPokemon])\n\n  return (\n    <AppContext.Provider\n      value={{\n        loading,\n        sortedPokemon,\n        searchTerm,\n        selectTerm,\n        typesState,\n        setTypesState,\n        setSearchTerm,\n        filterPokemon,\n        setSelectTerm\n      }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\n// make sure use\nexport const usePokedexContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","export default __webpack_public_path__ + \"static/media/grass.5b4b93b2.webp\";","export default __webpack_public_path__ + \"static/media/bug.1b2c4259.webp\";","export default __webpack_public_path__ + \"static/media/dragon.3d635c1d.webp\";","export default __webpack_public_path__ + \"static/media/electric.d5a6ca1f.webp\";","export default __webpack_public_path__ + \"static/media/fairy.0b6d5022.webp\";","export default __webpack_public_path__ + \"static/media/flying.75062c1a.webp\";","import grass from '../resources/type_logos/grass.webp'\nimport bug from '../resources/type_logos/bug.webp'\nimport dragon from '../resources/type_logos/dragon.webp'\nimport electric from '../resources/type_logos/electric.webp'\nimport fairy from '../resources/type_logos/fairy.webp'\nimport flying from '../resources/type_logos/flying.webp'\nimport fire from '../resources/type_logos/fire.webp'\nimport ghost from '../resources/type_logos/ghost.webp'\nimport ground from '../resources/type_logos/ground.webp'\nimport ice from '../resources/type_logos/ice.webp'\nimport normal from '../resources/type_logos/normal.webp'\nimport poison from '../resources/type_logos/poison.webp'\nimport psychic from '../resources/type_logos/psychic.webp'\nimport rock from '../resources/type_logos/rock.webp'\nimport water from '../resources/type_logos/water.webp'\n\nexport const types = [\n  grass,\n  bug,\n  dragon,\n  electric,\n  fairy,\n  fire,\n  flying,\n  ghost,\n  ground,\n  ice,\n  normal,\n  poison,\n  psychic,\n  rock,\n  water\n]\n","export default __webpack_public_path__ + \"static/media/fire.fcbbf57c.webp\";","export default __webpack_public_path__ + \"static/media/ghost.ff326ea7.webp\";","export default __webpack_public_path__ + \"static/media/ground.b69d3cd5.webp\";","export default __webpack_public_path__ + \"static/media/ice.d5fe9ce1.webp\";","export default __webpack_public_path__ + \"static/media/normal.90a95003.webp\";","export default __webpack_public_path__ + \"static/media/poison.7cb3461f.webp\";","export default __webpack_public_path__ + \"static/media/psychic.bc098f75.webp\";","export default __webpack_public_path__ + \"static/media/rock.51daeec9.webp\";","export default __webpack_public_path__ + \"static/media/water.ae63a167.webp\";","import React from 'react'\n\nconst ProgressBar = ({ width, stat }) => {\n  const containerStyles = {\n    height: 20,\n    width: '98%',\n    backgroundColor: '#e0e0de',\n    borderRadius: 50,\n    marginTop: 10,\n    textTransform: 'capitalize',\n    display: 'flex'\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${width / 2 + 20}%`,\n    maxWidth: '100%',\n    backgroundColor: 'red',\n    borderRadius: 'inherit'\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'black',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <>\n      <div style={containerStyles}>\n        <span style={{ position: 'absolute', paddingLeft: '10px' }}>\n          {stat} - {width}\n        </span>\n        <div style={fillerStyles}>\n          <span style={labelStyles}></span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport { types } from '../utills/typesList'\nimport ProgressBar from '../components/ProgressBar'\n\nconst PokedexEntry = ({ pokemon }) => {\n  return (\n    <div className='dex-entry' key={Math.random()}>\n      <h4>{pokemon.name}</h4>\n      <img src={pokemon.sprites.front_default} alt='pokemon.name' />\n      <div className='pokemon-data'>\n        <p>Pokedex: #{pokemon.order}</p>\n        <p>Height: {pokemon.height}\"</p>\n        <p className='types'>\n          Types:\n          {pokemon.types.map((type, i) => (\n            <span key={i}>\n              <img\n                className='type-image'\n                src={types.filter(\n                  (item) =>\n                    item.toString().split('').slice(14, -14).join('') === //fix to get type (ie:grass)from memory location\n                    type.type.name\n                )}\n                alt={type.type.name}\n              />\n              {type.type.name}\n            </span>\n          ))}\n        </p>\n      </div>\n\n      <ProgressBar\n        key='10'\n        width={pokemon.stats[0].base_stat}\n        stat={pokemon.stats[0].stat.name}\n      />\n\n      <ProgressBar\n        key='20'\n        width={pokemon.stats[1].base_stat}\n        stat={pokemon.stats[1].stat.name}\n      />\n      <ProgressBar\n        key='30'\n        width={pokemon.stats[2].base_stat}\n        stat={pokemon.stats[2].stat.name}\n      />\n      <ProgressBar\n        key='40'\n        width={pokemon.stats[3].base_stat}\n        stat={pokemon.stats[3].stat.name}\n      />\n      <ProgressBar\n        key='50'\n        width={pokemon.stats[4].base_stat}\n        stat={pokemon.stats[4].stat.name}\n      />\n      <ProgressBar\n        key='60'\n        width={pokemon.stats[5].base_stat}\n        stat={pokemon.stats[5].stat.name}\n      />\n    </div>\n  )\n}\n\nexport default PokedexEntry\n","import React from 'react'\nimport { Modal, ModalManager, Effect } from 'react-dynamic-modal'\nimport PokedexEntry from '../components/PokedexEntry'\n\nconst MyModal = ({ onRequestClose, pokemon }) => {\n  const modalStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)'\n    },\n\n    content: {\n      width: '70%',\n      border: '2px solid rgba(0, 0, 0, .8)',\n      borderRadius: '6px'\n    }\n  }\n\n  return (\n    <Modal\n      onRequestClose={onRequestClose}\n      effect={Effect.Fall}\n      style={modalStyles}>\n      <PokedexEntry pokemon={pokemon} />\n      <button\n        onClick={ModalManager.close}\n        className='waves-effect waves-light btn modal-btn'>\n        Close\n      </button>\n      <a\n        href={`https://bulbapedia.bulbagarden.net/wiki/${pokemon.name}_(Pok%C3%A9mon)`}\n        target='blank'>\n        See more\n      </a>\n    </Modal>\n  )\n}\n\nexport default MyModal\n","import React from 'react'\nimport { ModalManager } from 'react-dynamic-modal'\nimport MyModal from '../components/MyModal'\n\nconst PokedexListEntry = ({ pokemon }) => {\n  const openModal = () => {\n    ModalManager.open(<MyModal onRequestClose={() => true} pokemon={pokemon} />)\n  }\n\n  return (\n    <>\n      <div className='dex-list-entry'>\n        <h3> {pokemon.name} </h3>\n        <img src={pokemon.sprites.front_default} alt='pokemon.name' />\n        <button\n          className='waves-effect waves-light btn'\n          href='#!'\n          onClick={openModal}>\n          View\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default PokedexListEntry\n","import React, { useEffect } from 'react'\nimport { types } from '../utills/typesList'\nimport { Modal, Effect } from 'react-dynamic-modal'\nimport M from 'materialize-css'\nimport { ModalManager } from 'react-dynamic-modal/lib/Modal'\n\nconst TypesModal = ({ onRequestClose, setTypesState, typesState }) => {\n  const modalStyles = {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)'\n    },\n\n    content: {\n      width: '70%',\n      border: '2px solid rgba(0, 0, 0, .8)',\n      borderRadius: '6px'\n    }\n  }\n\n  const handleChange = (index) => {\n    const state = [...typesState]\n    state[index].checked = !state[index].checked\n    setTypesState(state)\n  }\n\n  useEffect(() => {\n    M.AutoInit()\n  }, [])\n\n  return (\n    <Modal\n      onRequestClose={onRequestClose}\n      effect={Effect.Fall}\n      style={modalStyles}>\n      <div className='types-grid'>\n        {types.map((type, index) => (\n          <div key={index} className='type-box'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  value={type}\n                  className='filled-in'\n                  defaultChecked={typesState[index].checked}\n                  ischecked={typesState[index].checked.toString()}\n                  onChange={() => handleChange(index)}\n                />\n                <span>\n                  <img\n                    src={type}\n                    alt={type.toString().split('').slice(14, -14).join('')}\n                    style={{ height: '20px' }}\n                    className='types-img'\n                  />\n                </span>\n                {type.toString().split('').slice(14, -14).join('')}\n              </label>\n            </p>\n          </div>\n        ))}\n        <button\n          className='waves-effect waves-light btn'\n          onClick={ModalManager.close}>\n          Close\n        </button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default TypesModal\n","import React, { useEffect } from 'react'\nimport { usePokedexContext } from '../contexts/pokedexContext.js'\nimport TypesModal from './TypesModal.js'\nimport M from 'materialize-css'\nimport { ModalManager } from 'react-dynamic-modal/lib/Modal'\n\nconst PokemonFilter = ({ setCurrentPage }) => {\n  const {\n    searchTerm,\n    setSearchTerm,\n    selectTerm,\n    setSelectTerm,\n    filterPokemon,\n    typesState,\n    setTypesState\n  } = usePokedexContext()\n\n  const openModal = () => {\n    ModalManager.open(\n      <TypesModal\n        onRequestClose={() => true}\n        setTypesState={setTypesState}\n        filterPokemon={filterPokemon}\n        typesState={typesState}\n      />\n    )\n  }\n\n  useEffect(() => {\n    filterPokemon()\n    M.AutoInit()\n    setCurrentPage(1)\n    // eslint-disable-next-line\n  }, [searchTerm, selectTerm, typesState])\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const handleSelectChange = (e) => {\n    setSelectTerm(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} action='#' className='search-form'>\n        <input\n          type='text'\n          name='search'\n          id='search'\n          onChange={handleChange}\n          placeholder='Search by Name...'\n          style={{ width: '40%' }}\n        />\n\n        <select\n          onChange={handleSelectChange}\n          defaultValue='sortBy'\n          style={{ width: '30%' }}>\n          <option value='sortBy' disabled>\n            Sort By..\n          </option>\n          <option value='pokedex'>Pokedex #</option>\n          <option value='alphabetical'>Alphabetically</option>\n          <option value='hp'>HP</option>\n          <option value='attack'>Attack</option>\n          <option value='defense'>Defense</option>\n          <option value='sp-attack'>Special-Attack</option>\n          <option value='sp-defense'>Special-Defense</option>\n          <option value='speed'>Speed</option>\n        </select>\n      </form>\n      <div style={{ textAlign: 'center' }}>\n        <button\n          className='waves-effect waves-light btn center'\n          onClick={openModal}>\n          Sort by Type\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default PokemonFilter\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faHashtag,\n  faEnvelope,\n  faCodeBranch\n} from '@fortawesome/free-solid-svg-icons'\n\nconst Contact = () => {\n  const date = new Date()\n  return (\n    <div className='logos'>\n      <div>\n        <a className='pad' href='https://github.com/danielwilstrop'>\n          <FontAwesomeIcon icon={faCodeBranch} />\n        </a>\n        <a className='pad' href='https://www.instagram.com/danwilstrop/'>\n          <FontAwesomeIcon icon={faHashtag} />\n        </a>\n        <a className='pad' href='mailto:daniel.wilstrop@outlook.com'>\n          <FontAwesomeIcon icon={faEnvelope} />\n        </a>\n      </div>\n      <p className='copyright'>&copy; Daniel Wilstrop {date.getFullYear()}</p>\n    </div>\n  )\n}\n\nexport default Contact\n","export default __webpack_public_path__ + \"static/media/loading-arrow.dd29210f.gif\";","import React from 'react'\nimport arrow from '../resources/loading-arrow.gif'\n\nconst Loading = () => {\n  return (\n    <div className='loading'>\n      <h4> Warming up the pokeballs...</h4>\n      <img src={arrow} alt='loading' />\n    </div>\n  )\n}\n\nexport default Loading\n","import React from 'react'\n\nconst PokedexPagination = ({\n  pokemonPerPage,\n  totalPokemon,\n  paginate,\n  active\n}) => {\n  const pageNumbers = []\n  for (let i = 1; i <= Math.ceil(totalPokemon / pokemonPerPage); i++) {\n    pageNumbers.push(i)\n  }\n\n  const scrollPageUp = () => {\n    if (active > 0 && active < Math.ceil(totalPokemon / pokemonPerPage)) {\n      paginate(active + 1)\n    }\n  }\n\n  const scrollPagedown = () => {\n    if (active - 1 >= 1) {\n      paginate(active - 1)\n    }\n  }\n\n  return (\n    <div className='pages'>\n      <ul className='pagination'>\n        <li>\n          <a href='#!'>\n            <i className='material-icons' onClick={scrollPagedown}>\n              chevron_left\n            </i>\n          </a>\n        </li>\n        {pageNumbers.map((page, i) => (\n          <li\n            key={i}\n            className={\n              active === page ? 'waves-effect active' : 'waves-effect'\n            }>\n            <a href='#!' onClick={() => paginate(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n        <li>\n          <a href='#!'>\n            <i className='material-icons' onClick={scrollPageUp}>\n              chevron_right\n            </i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default PokedexPagination\n","import React, { useState } from 'react'\nimport PokedexListEntry from '../components/PokedexListEntry.js'\nimport { usePokedexContext } from '../contexts/pokedexContext.js'\nimport PokemonFilter from '../components/PokemonFilter'\nimport Contact from '../components/Contact'\nimport Loading from '../components/Loading'\nimport PokedexPagination from '../components/PokedexPagination'\n\nconst PokeDex = () => {\n  const { sortedPokemon, loading } = usePokedexContext()\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pokemonPerPage] = useState(20)\n\n  const lastIndex = currentPage * pokemonPerPage\n  const firstIndex = lastIndex - pokemonPerPage\n  const currentPokemon = sortedPokemon.slice(firstIndex, lastIndex)\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber)\n  }\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n    <>\n      <div className='dex-heading'>\n        <h3> Pokedex </h3>{' '}\n        <span>\n          Search, filter and research your pokemon, then choose which to take\n          into battle...\n        </span>\n      </div>\n\n      <PokemonFilter setCurrentPage={setCurrentPage} />\n      <PokedexPagination\n        pokemonPerPage={pokemonPerPage}\n        totalPokemon={sortedPokemon.length}\n        paginate={paginate}\n        active={currentPage}\n      />\n      <div className='dex'>\n        {currentPokemon.map((poke, i) => (\n          <PokedexListEntry key={i} pokemon={poke} />\n        ))}\n      </div>\n      <Contact />\n    </>\n  )\n}\n\nexport default PokeDex\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Contact from '../components/Contact'\n\nconst Error = () => {\n  return (\n    <div className='error'>\n      <h1> 404 - Page Not Found </h1>\n      <Link to='/'>\n        <button className='waves-effect waves-light btn center'>Home</button>\n      </Link>\n      <Contact />\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport PokeDex from './pages/PokeDex'\nimport Error from './pages/Error'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/'>\n          <PokeDex />\n        </Route>\n        <Route path='*'>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { AppProvider } from './contexts/pokedexContext'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}